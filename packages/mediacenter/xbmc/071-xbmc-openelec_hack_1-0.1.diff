diff -Naur xbmc-23841/xbmc/MathUtils.h xbmc-23841.patch/xbmc/MathUtils.h
--- xbmc-23841/xbmc/MathUtils.h	2009-10-18 22:20:52.000000000 +0200
+++ xbmc-23841.patch/xbmc/MathUtils.h	2009-10-20 08:58:35.131195343 +0200
@@ -30,8 +30,8 @@
   // to assert in these functions
   inline int round_int (double x)
   {
-    assert(x > static_cast<double>(INT_MIN / 2) - 1.0);
-    assert(x < static_cast <double>(INT_MAX / 2) + 1.0);
+//    assert(x > static_cast<double>(INT_MIN / 2) - 1.0);
+//    assert(x < static_cast <double>(INT_MAX / 2) + 1.0);
     const float round_to_nearest = 0.5f;
     int i;
 
@@ -62,8 +62,8 @@
 
   inline int ceil_int (double x)
   {
-    assert(x > static_cast<double>(INT_MIN / 2) - 1.0);
-    assert(x < static_cast <double>(INT_MAX / 2) + 1.0);
+//    assert(x > static_cast<double>(INT_MIN / 2) - 1.0);
+//    assert(x < static_cast <double>(INT_MAX / 2) + 1.0);
 
     #if !defined(__powerpc__) && !defined(__ppc__)
         const float round_towards_p_i = -0.5f;
@@ -97,8 +97,8 @@
 
   inline int truncate_int(double x)
   {
-    assert(x > static_cast<double>(INT_MIN / 2) - 1.0);
-    assert(x < static_cast <double>(INT_MAX / 2) + 1.0);
+//    assert(x > static_cast<double>(INT_MIN / 2) - 1.0);
+//    assert(x < static_cast <double>(INT_MAX / 2) + 1.0);
 
     #if !defined(__powerpc__) && !defined(__ppc__)
         const float round_towards_m_i = -0.5f;
