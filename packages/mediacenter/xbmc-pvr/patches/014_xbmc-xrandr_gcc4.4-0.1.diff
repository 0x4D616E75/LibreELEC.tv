diff -Naur xbmc-23757/xbmc-xrandr.c xbmc-23757.patch/xbmc-xrandr.c
--- xbmc-23757/xbmc-xrandr.c	2009-10-16 18:41:57.000000000 +0200
+++ xbmc-23757.patch/xbmc-xrandr.c	2009-10-17 05:15:34.000000000 +0200
@@ -2257,7 +2257,7 @@
 			mode_height (mode, output->rotation),
 			output->x, output->y);
 		if (verbose)
-		    printf (" id=\"%x\"", mode->id);
+		    printf (" id=\"%x\"", (int)mode->id);
 		if (output->rotation != RR_Rotate_0 || verbose)
 		{
 		    printf (" rotation=\"%s\"", 
@@ -2294,14 +2294,14 @@
 	    if (mode)
 	    {
 		printf (" wmm=\"%d\" hmm=\"%d\"",
-			output_info->mm_width, output_info->mm_height);
+			(int)output_info->mm_width, (int)output_info->mm_height);
 	    }
 	    printf (">\n");
 
 	    if (verbose)
 	    {
-		printf ("\tIdentifier: 0x%x\n", output->output.xid);
-		printf ("\tTimestamp:  %d\n", output_info->timestamp);
+		printf ("\tIdentifier: 0x%x\n", (int)output->output.xid);
+		printf ("\tTimestamp:  %d\n", (int)output_info->timestamp);
 		printf ("\tSubpixel:   %s\n", order[output_info->subpixel_order]);
 		printf ("\tClones:    ");
 		for (j = 0; j < output_info->nclone; j++)
@@ -2358,15 +2358,15 @@
 		    {
 			printf("\t%s: %d (0x%08x)",
 			       XGetAtomName (dpy, props[j]),
-			       *(INT32 *)prop, *(INT32 *)prop);
+			      (int)(INT32 *)prop, (int)(INT32 *)prop);
 
  			if (propinfo->range && propinfo->num_values > 0) {
 			    printf(" range%s: ",
 				   (propinfo->num_values == 2) ? "" : "s");
 
 			    for (k = 0; k < propinfo->num_values / 2; k++)
-				printf(" (%d,%d)", propinfo->values[k * 2],
-				       propinfo->values[k * 2 + 1]);
+				printf(" (%d,%d)", (int)propinfo->values[k * 2],
+				       (int)propinfo->values[k * 2 + 1]);
 			}
 
 			printf("\n");
@@ -2410,7 +2410,7 @@
 		    int		f;
 		    
 		    printf ("  %s (0x%x) %6.1fMHz",
-			    mode->name, mode->id,
+			    mode->name, (int)mode->id,
 			    (float)mode->dotClock / 1000000.0);
 		    for (f = 0; mode_flags[f].flag; f++)
 			if (mode->modeFlags & mode_flags[f].flag)
@@ -2443,7 +2443,7 @@
 			if (strcmp (jmode->name, kmode->name) != 0) continue;
 			mode_shown[k] = True;
 			kmode->modeFlags |= ModeShown;
-			printf ("    <mode id=\"0x%x\" name=\"%s\" w=\"%d\" h=\"%d\" hz=\"%.5f\"", kmode->id, kmode->name, kmode->width, kmode->height, mode_refresh (kmode));
+			printf ("    <mode id=\"0x%x\" name=\"%s\" w=\"%d\" h=\"%d\" hz=\"%.5f\"", (int)kmode->id, kmode->name, kmode->width, kmode->height, mode_refresh (kmode));
 			if (kmode == output->mode_info)
 			    printf (" current=\"true\"");
 			else
