diff -Naur xbmc-dharma-35100/addons/skin.confluence/720p/DialogAccessPoints.xml xbmc-dharma-35100.patch/addons/skin.confluence/720p/DialogAccessPoints.xml
diff -Naur xbmc-dharma-35100/addons/skin.confluence/720p/DialogConnections.xml xbmc-dharma-35100.patch/addons/skin.confluence/720p/DialogConnections.xml
diff -Naur xbmc-dharma-35100/guilib/Key.h xbmc-dharma-35100.patch/guilib/Key.h
--- xbmc-dharma-35100/guilib/Key.h	2010-10-30 05:36:40.000000000 +0200
+++ xbmc-dharma-35100.patch/guilib/Key.h	2010-11-01 21:23:48.525628797 +0100
@@ -355,7 +355,7 @@
 #define WINDOW_DIALOG_BUSY                10138
 #define WINDOW_DIALOG_PICTURE_INFO        10139
 #define WINDOW_DIALOG_ADDON_SETTINGS      10140
-#define WINDOW_DIALOG_ACCESS_POINTS       10141
+#define WINDOW_DIALOG_CONNECTIONS         10141
 #define WINDOW_DIALOG_FULLSCREEN_INFO     10142
 #define WINDOW_DIALOG_KARAOKE_SONGSELECT  10143
 #define WINDOW_DIALOG_KARAOKE_SELECTOR    10144
diff -Naur xbmc-dharma-35100/xbmc/Application.cpp xbmc-dharma-35100.patch/xbmc/Application.cpp
--- xbmc-dharma-35100/xbmc/Application.cpp	2010-11-01 21:23:31.934434454 +0100
+++ xbmc-dharma-35100.patch/xbmc/Application.cpp	2010-11-01 21:23:48.530628857 +0100
@@ -212,7 +212,7 @@
 #include "GUIDialogPictureInfo.h"
 #include "GUIDialogAddonSettings.h"
 #include "GUIDialogAddonInfo.h"
-#include "GUIDialogAccessPoints.h"
+#include "GUIDialogConnections.h"
 #include "GUIDialogFullScreenInfo.h"
 #include "GUIDialogTeletext.h"
 #include "GUIDialogSlider.h"
@@ -1055,7 +1055,7 @@
   g_windowManager.Add(new CGUIDialogPictureInfo);      // window id = 139
   g_windowManager.Add(new CGUIDialogAddonInfo);
   g_windowManager.Add(new CGUIDialogAddonSettings);      // window id = 140
-  g_windowManager.Add(new CGUIDialogAccessPoints);      // window id = 141
+  g_windowManager.Add(new CGUIDialogConnections);      // window id = 141
 
   g_windowManager.Add(new CGUIDialogLockSettings); // window id = 131
 
@@ -3138,7 +3138,7 @@
     g_windowManager.Delete(WINDOW_DIALOG_PICTURE_INFO);
     g_windowManager.Delete(WINDOW_DIALOG_ADDON_INFO);
     g_windowManager.Delete(WINDOW_DIALOG_ADDON_SETTINGS);
-    g_windowManager.Delete(WINDOW_DIALOG_ACCESS_POINTS);
+    g_windowManager.Delete(WINDOW_DIALOG_CONNECTIONS);
     g_windowManager.Delete(WINDOW_DIALOG_SLIDER);
 
     g_windowManager.Delete(WINDOW_DIALOG_OSD_TELETEXT);
diff -Naur xbmc-dharma-35100/xbmc/ButtonTranslator.cpp xbmc-dharma-35100.patch/xbmc/ButtonTranslator.cpp
--- xbmc-dharma-35100/xbmc/ButtonTranslator.cpp	2010-10-30 05:36:51.000000000 +0200
+++ xbmc-dharma-35100.patch/xbmc/ButtonTranslator.cpp	2010-11-01 21:23:48.533628890 +0100
@@ -255,7 +255,7 @@
         {"smartplaylistrule"        , WINDOW_DIALOG_SMART_PLAYLIST_RULE},
         {"busydialog"               , WINDOW_DIALOG_BUSY},
         {"pictureinfo"              , WINDOW_DIALOG_PICTURE_INFO},
-        {"accesspoints"             , WINDOW_DIALOG_ACCESS_POINTS},
+        {"connections"              , WINDOW_DIALOG_CONNECTIONS},
         {"fullscreeninfo"           , WINDOW_DIALOG_FULLSCREEN_INFO},
         {"karaokeselector"          , WINDOW_DIALOG_KARAOKE_SONGSELECT},
         {"karaokelargeselector"     , WINDOW_DIALOG_KARAOKE_SELECTOR},
diff -Naur xbmc-dharma-35100/xbmc/GUIDialogAccessPoints.cpp xbmc-dharma-35100.patch/xbmc/GUIDialogAccessPoints.cpp
--- xbmc-dharma-35100/xbmc/GUIDialogAccessPoints.cpp	2010-11-01 21:23:31.950434640 +0100
+++ xbmc-dharma-35100.patch/xbmc/GUIDialogAccessPoints.cpp	1970-01-01 01:00:00.000000000 +0100
@@ -1,163 +0,0 @@
-/*
- *      Copyright (C) 2005-2008 Team XBMC
- *      http://www.xbmc.org
- *
- *  This Program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License as published by
- *  the Free Software Foundation; either version 2, or (at your option)
- *  any later version.
- *
- *  This Program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
- *
- */
-
-#include "GUIDialogAccessPoints.h"
-#include "GUIDialogKeyboard.h"
-#include "Application.h"
-#include "FileItem.h"
-#include "LocalizeStrings.h"
-#include "JobManager.h"
-#include "ConnectionJob.h"
-
-#define CONTROL_ACCESS_POINTS 3
-
-const char *ConnectionStateToString(ConnectionState state)
-{
-  switch (state)
-  {
-    case NETWORK_CONNECTION_STATE_DISCONNECTED:
-      return "disconnected";
-    case NETWORK_CONNECTION_STATE_CONNECTING:
-      return "connecting";
-    case NETWORK_CONNECTION_STATE_CONNECTED:
-      return "connected";
-    case NETWORK_CONNECTION_STATE_FAILURE:
-      return "failure";
-    case NETWORK_CONNECTION_STATE_UNKNOWN:
-    default:
-      return "unknown";
-  }
-
-  return "";
-}
-
-const char *ConnectionTypeToString(ConnectionType type)
-{
-  switch (type)
-  {
-    case NETWORK_CONNECTION_TYPE_WIRED:
-      return "wired";
-    case NETWORK_CONNECTION_TYPE_WIFI:
-      return "wifi";
-    case NETWORK_CONNECTION_TYPE_UNKNOWN:
-    default:
-      return "unknown";
-  }
-
-  return "";
-}
-
-const char *EncryptionToString(EncryptionType type)
-{
-  switch (type)
-  {
-    case NETWORK_CONNECTION_ENCRYPTION_NONE:
-      return "";
-    case NETWORK_CONNECTION_ENCRYPTION_WEP:
-      return "wep";
-    case NETWORK_CONNECTION_ENCRYPTION_WPA:
-      return "wpa";
-    case NETWORK_CONNECTION_ENCRYPTION_WPA2:
-      return "wpa2";
-    case NETWORK_CONNECTION_ENCRYPTION_IEEE8021x:
-      return "wpa-rsn";
-    case NETWORK_CONNECTION_ENCRYPTION_UNKNOWN:
-    default:
-      return "unknown";
-  }
-
-  return "";
-}
-
-CGUIDialogAccessPoints::CGUIDialogAccessPoints(void)
-    : CGUIDialog(WINDOW_DIALOG_ACCESS_POINTS, "DialogAccessPoints.xml")
-{
-  m_connectionsFileList = new CFileItemList;
-}
-
-CGUIDialogAccessPoints::~CGUIDialogAccessPoints(void)
-{
-  delete m_connectionsFileList;
-}
-
-bool CGUIDialogAccessPoints::OnAction(const CAction &action)
-{
-  if (action.GetID() == ACTION_SELECT_ITEM)
-  {
-    CGUIMessage msg(GUI_MSG_ITEM_SELECTED, GetID(), CONTROL_ACCESS_POINTS);
-    OnMessage(msg);
-    int iItem = msg.GetParam1();
-
-    ConnectionList connections = g_application.getNetworkManager().GetConnections();
-    CJobManager::GetInstance().AddJob(new CConnectionJob(connections[iItem]), this);
-
-    return true;
-  }
-  else if (action.GetID() == 300)
-  {
-    UpdateConnectionList();
-    return true;
-  }
-
-  return CGUIDialog::OnAction(action);
-}
-
-void CGUIDialogAccessPoints::OnInitWindow()
-{
-  CGUIDialog::OnInitWindow();
-
-  UpdateConnectionList();
-}
-
-void CGUIDialogAccessPoints::UpdateConnectionList()
-{
-  m_connectionsFileList->Clear();
-
-  CGUIMessage msgReset(GUI_MSG_LABEL_RESET, GetID(), CONTROL_ACCESS_POINTS);
-  OnMessage(msgReset);
-
-  ConnectionList connections = g_application.getNetworkManager().GetConnections();
-
-  for (int i = 0; i < (int) connections.size(); i++)
-  {
-    CFileItemPtr item(new CFileItem(connections[i]->GetName()));
-
-    if (connections[i]->GetConnectionType() == NETWORK_CONNECTION_TYPE_WIFI)
-    {
-      item->SetProperty("signal", (int)(connections[i]->GetStrength() / 20));
-      item->SetProperty("encryption", EncryptionToString(connections[i]->GetEncryption()));
-    }
-
-    item->SetProperty("type", ConnectionTypeToString(connections[i]->GetConnectionType()));
-    item->SetProperty("state", ConnectionStateToString(connections[i]->GetConnectionState()));
-
-    m_connectionsFileList->Add(item);
-  }
-
-  CGUIMessage msg(GUI_MSG_LABEL_BIND, GetID(), CONTROL_ACCESS_POINTS, 0, 0, m_connectionsFileList);
-  OnMessage(msg);
-}
-
-void CGUIDialogAccessPoints::OnJobComplete(unsigned int jobID, bool success, CJob *job)
-{
-  if (success)
-    Close();
-}
diff -Naur xbmc-dharma-35100/xbmc/GUIDialogAccessPoints.h xbmc-dharma-35100.patch/xbmc/GUIDialogAccessPoints.h
--- xbmc-dharma-35100/xbmc/GUIDialogAccessPoints.h	2010-11-01 21:23:31.950434640 +0100
+++ xbmc-dharma-35100.patch/xbmc/GUIDialogAccessPoints.h	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#ifndef GUI_DIALOG_ACCES_POINTS
-#define GUI_DIALOG_ACCES_POINTS
-
-/*
- *      Copyright (C) 2005-2008 Team XBMC
- *      http://www.xbmc.org
- *
- *  This Program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License as published by
- *  the Free Software Foundation; either version 2, or (at your option)
- *  any later version.
- *
- *  This Program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
- *
- */
-
-#pragma once
-
-#include <vector>
-#include "GUIDialog.h"
-#include "IConnection.h"
-#include "Job.h"
-
-class CFileItemList;
-
-class CGUIDialogAccessPoints : public CGUIDialog, public IJobCallback
-{
-public:
-  CGUIDialogAccessPoints(void);
-  virtual ~CGUIDialogAccessPoints(void);
-  virtual void OnInitWindow();
-  virtual bool OnAction(const CAction &action);
-
-  virtual void OnJobComplete(unsigned int jobID, bool success, CJob *job);
-private:
-  void UpdateConnectionList();
-
-  CFileItemList *m_connectionsFileList;
-};
-#endif
diff -Naur xbmc-dharma-35100/xbmc/GUIDialogConnections.cpp xbmc-dharma-35100.patch/xbmc/GUIDialogConnections.cpp
--- xbmc-dharma-35100/xbmc/GUIDialogConnections.cpp	1970-01-01 01:00:00.000000000 +0100
+++ xbmc-dharma-35100.patch/xbmc/GUIDialogConnections.cpp	2010-11-01 21:23:48.548629067 +0100
@@ -0,0 +1,163 @@
+/*
+ *      Copyright (C) 2005-2008 Team XBMC
+ *      http://www.xbmc.org
+ *
+ *  This Program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2, or (at your option)
+ *  any later version.
+ *
+ *  This Program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with XBMC; see the file COPYING.  If not, write to
+ *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+ *  http://www.gnu.org/copyleft/gpl.html
+ *
+ */
+
+#include "GUIDialogConnections.h"
+#include "GUIDialogKeyboard.h"
+#include "Application.h"
+#include "FileItem.h"
+#include "LocalizeStrings.h"
+#include "JobManager.h"
+#include "ConnectionJob.h"
+
+#define CONTROL_ACCESS_POINTS 3
+
+const char *ConnectionStateToString(ConnectionState state)
+{
+  switch (state)
+  {
+    case NETWORK_CONNECTION_STATE_DISCONNECTED:
+      return "disconnected";
+    case NETWORK_CONNECTION_STATE_CONNECTING:
+      return "connecting";
+    case NETWORK_CONNECTION_STATE_CONNECTED:
+      return "connected";
+    case NETWORK_CONNECTION_STATE_FAILURE:
+      return "failure";
+    case NETWORK_CONNECTION_STATE_UNKNOWN:
+    default:
+      return "unknown";
+  }
+
+  return "";
+}
+
+const char *ConnectionTypeToString(ConnectionType type)
+{
+  switch (type)
+  {
+    case NETWORK_CONNECTION_TYPE_WIRED:
+      return "wired";
+    case NETWORK_CONNECTION_TYPE_WIFI:
+      return "wifi";
+    case NETWORK_CONNECTION_TYPE_UNKNOWN:
+    default:
+      return "unknown";
+  }
+
+  return "";
+}
+
+const char *EncryptionToString(EncryptionType type)
+{
+  switch (type)
+  {
+    case NETWORK_CONNECTION_ENCRYPTION_NONE:
+      return "";
+    case NETWORK_CONNECTION_ENCRYPTION_WEP:
+      return "wep";
+    case NETWORK_CONNECTION_ENCRYPTION_WPA:
+      return "wpa";
+    case NETWORK_CONNECTION_ENCRYPTION_WPA2:
+      return "wpa2";
+    case NETWORK_CONNECTION_ENCRYPTION_IEEE8021x:
+      return "wpa-rsn";
+    case NETWORK_CONNECTION_ENCRYPTION_UNKNOWN:
+    default:
+      return "unknown";
+  }
+
+  return "";
+}
+
+CGUIDialogConnections::CGUIDialogConnections(void)
+    : CGUIDialog(WINDOW_DIALOG_CONNECTIONS, "DialogConnections.xml")
+{
+  m_connectionsFileList = new CFileItemList;
+}
+
+CGUIDialogConnections::~CGUIDialogConnections(void)
+{
+  delete m_connectionsFileList;
+}
+
+bool CGUIDialogConnections::OnAction(const CAction &action)
+{
+  if (action.GetID() == ACTION_SELECT_ITEM)
+  {
+    CGUIMessage msg(GUI_MSG_ITEM_SELECTED, GetID(), CONTROL_ACCESS_POINTS);
+    OnMessage(msg);
+    int iItem = msg.GetParam1();
+
+    ConnectionList connections = g_application.getNetworkManager().GetConnections();
+    CJobManager::GetInstance().AddJob(new CConnectionJob(connections[iItem]), this);
+
+    return true;
+  }
+  else if (action.GetID() == 300)
+  {
+    UpdateConnectionList();
+    return true;
+  }
+
+  return CGUIDialog::OnAction(action);
+}
+
+void CGUIDialogConnections::OnInitWindow()
+{
+  CGUIDialog::OnInitWindow();
+
+  UpdateConnectionList();
+}
+
+void CGUIDialogConnections::UpdateConnectionList()
+{
+  m_connectionsFileList->Clear();
+
+  CGUIMessage msgReset(GUI_MSG_LABEL_RESET, GetID(), CONTROL_ACCESS_POINTS);
+  OnMessage(msgReset);
+
+  ConnectionList connections = g_application.getNetworkManager().GetConnections();
+
+  for (int i = 0; i < (int) connections.size(); i++)
+  {
+    CFileItemPtr item(new CFileItem(connections[i]->GetName()));
+
+    if (connections[i]->GetConnectionType() == NETWORK_CONNECTION_TYPE_WIFI)
+    {
+      item->SetProperty("signal", (int)(connections[i]->GetStrength() / 20));
+      item->SetProperty("encryption", EncryptionToString(connections[i]->GetEncryption()));
+    }
+
+    item->SetProperty("type", ConnectionTypeToString(connections[i]->GetConnectionType()));
+    item->SetProperty("state", ConnectionStateToString(connections[i]->GetConnectionState()));
+
+    m_connectionsFileList->Add(item);
+  }
+
+  CGUIMessage msg(GUI_MSG_LABEL_BIND, GetID(), CONTROL_ACCESS_POINTS, 0, 0, m_connectionsFileList);
+  OnMessage(msg);
+}
+
+void CGUIDialogConnections::OnJobComplete(unsigned int jobID, bool success, CJob *job)
+{
+  if (success)
+    Close();
+}
diff -Naur xbmc-dharma-35100/xbmc/GUIDialogConnections.h xbmc-dharma-35100.patch/xbmc/GUIDialogConnections.h
--- xbmc-dharma-35100/xbmc/GUIDialogConnections.h	1970-01-01 01:00:00.000000000 +0100
+++ xbmc-dharma-35100.patch/xbmc/GUIDialogConnections.h	2010-11-01 21:23:48.548629067 +0100
@@ -0,0 +1,48 @@
+#ifndef GUI_DIALOG_ACCES_POINTS
+#define GUI_DIALOG_ACCES_POINTS
+
+/*
+ *      Copyright (C) 2005-2008 Team XBMC
+ *      http://www.xbmc.org
+ *
+ *  This Program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2, or (at your option)
+ *  any later version.
+ *
+ *  This Program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with XBMC; see the file COPYING.  If not, write to
+ *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+ *  http://www.gnu.org/copyleft/gpl.html
+ *
+ */
+
+#pragma once
+
+#include <vector>
+#include "GUIDialog.h"
+#include "IConnection.h"
+#include "Job.h"
+
+class CFileItemList;
+
+class CGUIDialogConnections : public CGUIDialog, public IJobCallback
+{
+public:
+  CGUIDialogConnections(void);
+  virtual ~CGUIDialogConnections(void);
+  virtual void OnInitWindow();
+  virtual bool OnAction(const CAction &action);
+
+  virtual void OnJobComplete(unsigned int jobID, bool success, CJob *job);
+private:
+  void UpdateConnectionList();
+
+  CFileItemList *m_connectionsFileList;
+};
+#endif
diff -Naur xbmc-dharma-35100/xbmc/GUIWindowSettingsCategory.cpp xbmc-dharma-35100.patch/xbmc/GUIWindowSettingsCategory.cpp
--- xbmc-dharma-35100/xbmc/GUIWindowSettingsCategory.cpp	2010-11-01 21:23:31.959434747 +0100
+++ xbmc-dharma-35100.patch/xbmc/GUIWindowSettingsCategory.cpp	2010-11-01 21:23:48.551629102 +0100
@@ -78,7 +78,7 @@
 #include "CoreAudio.h"
 #include "XBMCHelper.h"
 #endif
-#include "GUIDialogAccessPoints.h"
+#include "GUIDialogConnections.h"
 #include "FileSystem/Directory.h"
 
 #include "FileItem.h"
diff -Naur xbmc-dharma-35100/xbmc/Makefile.in xbmc-dharma-35100.patch/xbmc/Makefile.in
--- xbmc-dharma-35100/xbmc/Makefile.in	2010-11-01 21:23:32.029435567 +0100
+++ xbmc-dharma-35100.patch/xbmc/Makefile.in	2010-11-01 21:23:48.553629126 +0100
@@ -189,7 +189,7 @@
      GUILargeTextureManager.cpp \
      GUIDialogKaiToast.cpp \
      KeyboardLayoutConfiguration.cpp \
-     GUIDialogAccessPoints.cpp \
+     GUIDialogConnections.cpp \
      Artist.cpp \
      Album.cpp \
      MediaSource.cpp \
diff -Naur xbmc-dharma-35100/xbmc/NetworkManager.cpp xbmc-dharma-35100.patch/xbmc/NetworkManager.cpp
--- xbmc-dharma-35100/xbmc/NetworkManager.cpp	2010-11-01 21:23:32.033435613 +0100
+++ xbmc-dharma-35100.patch/xbmc/NetworkManager.cpp	2010-11-01 21:23:48.553629126 +0100
@@ -105,7 +105,7 @@
     m_defaultConnection = connection;
 
   CAction action(300);
-  g_application.getApplicationMessenger().SendAction(action, WINDOW_DIALOG_ACCESS_POINTS);
+  g_application.getApplicationMessenger().SendAction(action, WINDOW_DIALOG_CONNECTIONS);
 }
 
 void CNetworkManager::OnConnectionListChange(ConnectionList list)
@@ -123,7 +123,7 @@
   }
 
   CAction action(300);
-  g_application.getApplicationMessenger().SendAction(action, WINDOW_DIALOG_ACCESS_POINTS);
+  g_application.getApplicationMessenger().SendAction(action, WINDOW_DIALOG_CONNECTIONS);
 }
 
 void CNetworkManager::StartServices()
